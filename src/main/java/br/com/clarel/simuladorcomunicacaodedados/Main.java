/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.clarel.simuladorcomunicacaodedados;

import br.com.clarel.helper.Utils;
import br.com.clarel.main.algoritm.AlgoritimoDeCodificacao;
import br.com.clarel.main.algoritm.Crc;
import br.com.clarel.main.algoritm.Hamming;
import br.com.clarel.main.algoritm.ParidadeImpar;
import br.com.clarel.main.algoritm.ParidadePar;

/**
 *
 * @author Clarel
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        this.setTitle("Simulador de Comunicação de Dados - Clarel de Menezes Spies Filho");

        initComponents();
        radioHamming.setSelected(true);
        this.setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        codificacao = new javax.swing.ButtonGroup();
        textLabelDecodificados = new javax.swing.JPanel();
        labelMensagem = new javax.swing.JLabel();
        textoMensagem = new javax.swing.JTextField();
        radioHamming = new javax.swing.JRadioButton();
        radioCrc = new javax.swing.JRadioButton();
        radioPar = new javax.swing.JRadioButton();
        radioImpar = new javax.swing.JRadioButton();
        simularErro = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        textEnviado = new javax.swing.JTextArea();
        botaoTransmitir = new javax.swing.JButton();
        labelEnviado = new javax.swing.JLabel();
        labelRecebido = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textRecebido = new javax.swing.JTextArea();
        labelEmBits = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        textMensagemEmBits = new javax.swing.JTextArea();
        labelVerificacaoErro = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        textoResultadoVerificacao = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        textResultadoCorrecao = new javax.swing.JTextArea();
        labelVerificacaoErro2 = new javax.swing.JLabel();
        labelMensagemRecebidaASCII = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        textMensagemRecebidaASCII = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1024, 620));

        textLabelDecodificados.setPreferredSize(new java.awt.Dimension(1024, 620));
        textLabelDecodificados.setRequestFocusEnabled(false);

        labelMensagem.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelMensagem.setText("Mensagem");

        textoMensagem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        codificacao.add(radioHamming);
        radioHamming.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioHamming.setText("Hamming");

        codificacao.add(radioCrc);
        radioCrc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioCrc.setText("CRC");

        codificacao.add(radioPar);
        radioPar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioPar.setText("Paridade Par");

        codificacao.add(radioImpar);
        radioImpar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioImpar.setText("Paridade Impar");

        simularErro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        simularErro.setText("Simular Erro");

        textEnviado.setEditable(false);
        textEnviado.setColumns(20);
        textEnviado.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        textEnviado.setRows(5);
        textEnviado.setPreferredSize(new java.awt.Dimension(164, 35));
        jScrollPane1.setViewportView(textEnviado);

        botaoTransmitir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botaoTransmitir.setText("Executar");
        botaoTransmitir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botaoTransmitirMouseClicked(evt);
            }
        });

        labelEnviado.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelEnviado.setText("Bits codificados enviados");

        labelRecebido.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelRecebido.setText("Bits codificados recebidos (será diferente dos enviados, caso tenha simulado erro)");

        textRecebido.setEditable(false);
        textRecebido.setColumns(20);
        textRecebido.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        textRecebido.setRows(5);
        jScrollPane2.setViewportView(textRecebido);

        labelEmBits.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelEmBits.setText("Mensagem em bits");

        textMensagemEmBits.setEditable(false);
        textMensagemEmBits.setColumns(20);
        textMensagemEmBits.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        textMensagemEmBits.setRows(2);
        textMensagemEmBits.setPreferredSize(new java.awt.Dimension(164, 35));
        jScrollPane3.setViewportView(textMensagemEmBits);

        labelVerificacaoErro.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelVerificacaoErro.setText("Resultado da verificação de erros");

        textoResultadoVerificacao.setEditable(false);
        textoResultadoVerificacao.setColumns(20);
        textoResultadoVerificacao.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        textoResultadoVerificacao.setRows(5);
        jScrollPane4.setViewportView(textoResultadoVerificacao);

        textResultadoCorrecao.setEditable(false);
        textResultadoCorrecao.setColumns(20);
        textResultadoCorrecao.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        textResultadoCorrecao.setRows(5);
        jScrollPane5.setViewportView(textResultadoCorrecao);

        labelVerificacaoErro2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelVerificacaoErro2.setText("Resultado da correção");

        labelMensagemRecebidaASCII.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelMensagemRecebidaASCII.setText("Mensagem ASCII recebida");

        textMensagemRecebidaASCII.setEditable(false);
        textMensagemRecebidaASCII.setColumns(20);
        textMensagemRecebidaASCII.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        textMensagemRecebidaASCII.setRows(5);
        jScrollPane7.setViewportView(textMensagemRecebidaASCII);

        javax.swing.GroupLayout textLabelDecodificadosLayout = new javax.swing.GroupLayout(textLabelDecodificados);
        textLabelDecodificados.setLayout(textLabelDecodificadosLayout);
        textLabelDecodificadosLayout.setHorizontalGroup(
            textLabelDecodificadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(textLabelDecodificadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(textLabelDecodificadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelVerificacaoErro2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, textLabelDecodificadosLayout.createSequentialGroup()
                        .addGroup(textLabelDecodificadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelMensagemRecebidaASCII, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelEnviado, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelRecebido, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, textLabelDecodificadosLayout.createSequentialGroup()
                                .addComponent(labelMensagem, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textoMensagem))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, textLabelDecodificadosLayout.createSequentialGroup()
                                .addComponent(radioHamming)
                                .addGap(18, 18, 18)
                                .addComponent(radioCrc)
                                .addGap(18, 18, 18)
                                .addComponent(radioPar)
                                .addGap(18, 18, 18)
                                .addComponent(radioImpar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                                .addComponent(simularErro)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(botaoTransmitir))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelEmBits, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelVerificacaoErro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane5))
                        .addContainerGap())))
        );
        textLabelDecodificadosLayout.setVerticalGroup(
            textLabelDecodificadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(textLabelDecodificadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(textLabelDecodificadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelMensagem, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoMensagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(textLabelDecodificadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioHamming)
                    .addComponent(radioCrc)
                    .addComponent(radioPar)
                    .addComponent(radioImpar)
                    .addComponent(simularErro)
                    .addComponent(botaoTransmitir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelEmBits, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelEnviado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelRecebido, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelVerificacaoErro, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelVerificacaoErro2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelMensagemRecebidaASCII, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        radioPar.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(textLabelDecodificados, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(textLabelDecodificados, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoTransmitirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoTransmitirMouseClicked

        AlgoritimoDeCodificacao algoritimo = new Hamming();
        if (radioCrc.isSelected()) {
            algoritimo = new Crc();
        }
        if (radioPar.isSelected()) {
            algoritimo = new ParidadePar();
        }
        if (radioImpar.isSelected()) {
            algoritimo = new ParidadeImpar();
        }

        if (textoMensagem.toString().length() != 0) {
            textMensagemEmBits.setText(Utils.asciiStringToBinaryStringArray(textoMensagem.getText()).toString());

            StringBuilder mensagemBinaria = algoritimo.encode(textoMensagem.getText().toString());
            textEnviado.setText(mensagemBinaria.toString());

            if (simularErro.isSelected()) {
                mensagemBinaria = Utils.simulateErrorInOneBit(mensagemBinaria);
            }

            textRecebido.setText(mensagemBinaria.toString());
            textoResultadoVerificacao.setText(algoritimo.verificaErro(mensagemBinaria));

            StringBuilder mensagemBinariaAuxiliar = null;

            textResultadoCorrecao.setText("");
            if (simularErro.isSelected()) {
                mensagemBinariaAuxiliar = algoritimo.corrigeErro(mensagemBinaria);

                if (mensagemBinariaAuxiliar == null) {
                    textResultadoCorrecao.setText("Não se aplica a este algoritimo");
                } else {
                    mensagemBinaria = mensagemBinariaAuxiliar;
                    textResultadoCorrecao.setText(mensagemBinaria.toString());
                }
            }
            
            textMensagemRecebidaASCII.setText(algoritimo.decode(mensagemBinaria));
            

        } else {
            //alerta
        }

        // textEnviado.setText("010101010101010101010010101010101010100101010101010101010100101010101010101001010101010101010100101010101010101010101010010101010101010101010010101010101010100101010101010101010010101010101010101010101001010101010101001010101010101010100101010101010101010101010");
        //textRecebido.setText("11111111111111111111111111111111111111111111111111111111111111111111111111111111111");

    }//GEN-LAST:event_botaoTransmitirMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoTransmitir;
    private javax.swing.ButtonGroup codificacao;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JLabel labelEmBits;
    private javax.swing.JLabel labelEnviado;
    private javax.swing.JLabel labelMensagem;
    private javax.swing.JLabel labelMensagemRecebidaASCII;
    private javax.swing.JLabel labelRecebido;
    private javax.swing.JLabel labelVerificacaoErro;
    private javax.swing.JLabel labelVerificacaoErro2;
    private javax.swing.JRadioButton radioCrc;
    private javax.swing.JRadioButton radioHamming;
    private javax.swing.JRadioButton radioImpar;
    private javax.swing.JRadioButton radioPar;
    private javax.swing.JCheckBox simularErro;
    private javax.swing.JTextArea textEnviado;
    private javax.swing.JPanel textLabelDecodificados;
    private javax.swing.JTextArea textMensagemEmBits;
    private javax.swing.JTextArea textMensagemRecebidaASCII;
    private javax.swing.JTextArea textRecebido;
    private javax.swing.JTextArea textResultadoCorrecao;
    private javax.swing.JTextField textoMensagem;
    private javax.swing.JTextArea textoResultadoVerificacao;
    // End of variables declaration//GEN-END:variables
}
